version: '3.8'

services:
  app:
    build: .
    volumes:
      - ./data:/app/data:delegated
      - ./models:/app/models:delegated
      - ./src:/app/src:delegated
      - ./scripts:/app/scripts:delegated
    environment:
      - ENV=dev
      - PYTHONPATH=/app
    ports:
      - "8000:8000"  # API port
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "test", "-d", "/app/data/raw"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - ./data:/app/data:delegated
      - ./models:/app/models:delegated
      - ./src:/app/src:delegated
      - ./scripts:/app/scripts:delegated
    environment:
      - ENV=dev
      - PYTHONPATH=/app
      - DATA_DIR=/app/data
      - MODELS_DIR=/app/models
    ports:
      - "8001:8000"  # Forward API to a different port
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n_workflows:/home/node/.n8n/workflows
    environment:
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_USER_FOLDER=/home/node/.n8n
      - N8N_ENDPOINT_REST=http://api:8000
    restart: unless-stopped
    networks:
      - app_network
    depends_on:
      api:
        condition: service_healthy

networks:
  app_network:
    driver: bridge

volumes:
  n8n_data:
    driver: local